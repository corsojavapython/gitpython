API Name:   /test
VERSIONE:   1.0
Scopo:      Provare le chiamate con funzione di echo
Parametri:  tutto quello che voglio
Risposta:   tutto quello che gli mando
Verbo:      qualsiasi: GET, PUT, POST, DELETE

----------------------------------------------------------
API Name:   /autenticazione
VERSIONE:   1.0
Scopo:      Esegue il login di un utente
Parametri:  JSON: utente, password
Esempio:    {"utente":"useruno", "password": "passworduser1"}
Risposta:   JSON con tutti i dati utente + loginstatus che 
            può essere OK oppure FAIL
Esempio:    {"NOME":"Enrico", "COGNOME","Terzolo", ... ...
            "loginstatus":"OK"}
Verbo:      POST

-----------------------------------------------------------
APi Name:   /init
VERSIONE    2.0 (Enrico Terzolo)
Scopo:      inizializzare i l database
Parametri:  JSON: nessuno, leggi un file di configurazione (congif.json)
Esempio:    {"filename":"classe.json","dbhost":"python.hostingstudenti.fortechance.com",
            "dbname":"c3db", "dbuser":"c3python", "dbpassw":"ThePythonCourse098"}
Risposta:   Status dell'operazione in formto JSON (OK o FAIL)
Esempio:    {"init":"OK"}
Verbo:      PUT

------------------------------------------------------------
API Name:   /registrazione
VERSIONE    1.1
Scopo:      Registrare un nuovo utente nel DB consinsiderandolo come status di
            login = FAIL
Parametri:  JSON: Tutti i dati di registrazione:
                nome, S(25)
                cognome, S(25)
                utente, S(>8)
                password, S(>8)
                eta, N (I)
                sesso, S (1!)
                cfiscale, S (16!)
                nazionalità, S(3!)
                indirizzo
Esempio:    {"nome":"Enrico", "cognome":"Terzolo",... ... ... }
Risposta:   Chiave univoca del nuovo utente in formato JSON con user e password
            Ed il codice di errore per operazione non riuscita ed un messaggio
Esempio:    {"codice":"3ed2134a-3432-34244242-EFFF", "utente":"ppp", "password":"rrr", 
            "loginstatus": "FAIL"} perchè un nuovo registrato sicuramente non ha fatto il login
Verbo:      PUT
------------------------------------------------------------
API Name:   /wallet
VERSIONE:   1.0
Scopo:      Ottenere i dati relativi a tutti i wallet opzionalmente
            filtrati per propietario (per utente)
Parametri:  o nessuno (tutti i wallet) oppure in formato JSON:
            {"propietario":"chiave del propietario"}
Esempio:    {"propietario":"abfca-244452345-42341231-dffa"}
Risposta:   dati del o dei wallet in JSON
Esempio:    {"idwallet":"1", "propietario":"abfca-244452345-42341231-dffa",
            "saldo":"453.89", "descrizione":"wallet principale"}
oppure:     {"wallet_1":{"idwallet":"1", "propietario":"abfca-244452345-42341231-dffa",
            "saldo":"453.89", "descrizione":"wallet principale"},
            "wallet_2":{"idwallet":"2", "propietario":"abfcf-234152345-42341231-dffa",
            "saldo":"2313.50", "descrizione":"wallet principale"}}
Verbo:      GET
-----------------------------------------------------------------            
API Name:   /wallet/insert
VERSIONE 1.0
Scopo:      Inserisce un nuovo wallet per un utente
Parametri:  JSON con i dati del nuovo wallet:
                propietario,
                descrizione
Esempio:    {"propietario":"fdcaa:23441243-23413-abbce", 
            "descrizione":"Wallet per acquisti"}
Risposta:   JSON che dica l'esito: OK, FAIL
Esempio:    {"esito":"OK"} 
Verbo:      PUT           
-----------------------------------------------------------------
API Name:   /wallet/mov
VESIONE:    1.0
Scopo:      recuperare i movimenti di un wallet
Parametri:  ID del wallet di ineresse:
Esempio:    {"walletid":"1"}
Risposta:    Elenco movimenti del wallet
Esempio:    {"movimento_1:{"data":"04-04-2024 16:32:45.000",
             "idmovimento":"1",
             "idwallet":"1",
             "importo":"-342,25",
             "idtransazione","fadea-424312431-2342412-ffcde",
             "descrizione":"comperato vaso di fiori"
            },
            {"movimento_43":{"data":"04-04-2024 16:44:25.000",
             "idmovimento":"43",
             "idwallet":"1",
             "importo":"122,25",
             "idtransazione","faaea-424312431-1122412-aacde",
             "descrizione":"venduto fucile"}
            }}
Verbo:      GET
----------------------------------------------------------------
API Name:   /wallet/mov
VERSIONE:   1.0
Scopo:      Inserire i dati relativi ad un movimento
            su un particolare wallet
Parametri:  formato JSON:
                wallet,
                importo,
                data,
                descrizione
Esempio:    {"wallet":"24", 
            "importo":"431,12",
            "data":"04-04-2024 17:01:22",
            "descrizione":"vendita scarpe"}
Risposta:   JSON Con esito operazione: 'OK' o 'FAIL'
Esempio:    {"esito":"OK"}
Verbo:      PUT